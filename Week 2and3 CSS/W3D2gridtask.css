/*
GRID in css - it is 2 dimension... vs flex which is 1 dimension

The grid layout consists of parent element,  with one or more child elements.

The DISPLAY of the parent element should be set to GRID! or INLINE-GRID
*/


div {
    border: 2px solid black;
}

.parent-div {
    display: grid;
    column-gap: 2px;
    row-gap: 2px;
    background-color: coral;
    grid-template-areas: 
    'div1 div1 div1'
    'div2 div2 div2'
    'div3 div4 div4'
    'div3 div4 div4'
    'div3 div4 div4'
    'div3 div5 div5'
}

.child {
    /* width: 400px; */
    /* height: 200px; */
    min-height: 100px;
    background-color: darkgrey;
}

.div1 {
    /* grid-column-start: 1;
    grid-column-end: 3; */
    grid-area: div1;
    display: flex;
    justify-content: center;
    align-items: center;
}

.div2 {
    /* grid-column-start: 1;
    grid-column-end: 2;
    grid-row-start: 2;
    grid-row-end: 4; */
    grid-area: div2;
    display: flex;
    align-items: center;
    justify-content: space-around;
    
}

ul, li {
    list-style: none;
    display: flex;
    margin: 0 50px;
}

a {
    text-decoration: none;
}

.div3 {
    /* grid-column-start: 2;
    grid-column-end: 3; */
    grid-area: div3;
    display: flex;
    align-items: center;
    justify-content: center;
}

.div4 {
    grid-area: div4;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

.div5 {
    grid-area: div5;
    display: flex;
    justify-content: center;
    align-items: center;
    font-weight: 800;
}

.div6 {
    grid-area: div6;
}

.div7 {
    grid-area: div7;
}

.div8 {
    grid-area: div8;
}

.div9 {
    grid-area: div9;
}

.div10 {
    grid-area: div10;
}

